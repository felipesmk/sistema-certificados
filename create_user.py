#!/usr/bin/env python3
"""
Script para criar usu√°rios com diferentes perfis.
Permite criar usu√°rios admin, operador ou visualizador.
"""

from app import app, db
from models import User, Role
from werkzeug.security import generate_password_hash

def listar_perfis():
    """Lista todos os perfis dispon√≠veis"""
    perfis = Role.query.all()
    print("\nPerfis dispon√≠veis:")
    for i, perfil in enumerate(perfis, 1):
        print(f"{i}. {perfil.nome} - {perfil.descricao}")
    return perfis

def criar_usuario():
    """Cria um novo usu√°rio"""
    print("=== Criar Novo Usu√°rio ===")
    
    # Listar perfis
    perfis = listar_perfis()
    
    # Coletar dados do usu√°rio
    username = input('\nNome de usu√°rio: ').strip()
    if not username:
        print("Nome de usu√°rio √© obrigat√≥rio!")
        return
    
    # Verificar se usu√°rio j√° existe
    if User.query.filter_by(username=username).first():
        print(f"Usu√°rio '{username}' j√° existe!")
        return
    
    nome = input('Nome completo: ').strip()
    if not nome:
        print("Nome completo √© obrigat√≥rio!")
        return
    
    email = input('Email: ').strip()
    if not email:
        print("Email √© obrigat√≥rio!")
        return
    
    password = input('Senha: ').strip()
    if not password:
        print("Senha √© obrigat√≥ria!")
        return
    
    # Selecionar perfil
    try:
        perfil_escolha = int(input(f'\nEscolha o perfil (1-{len(perfis)}): '))
        if perfil_escolha < 1 or perfil_escolha > len(perfis):
            print("Op√ß√£o inv√°lida!")
            return
        perfil = perfis[perfil_escolha - 1]
    except ValueError:
        print("Op√ß√£o inv√°lida!")
        return
    
    # Criar usu√°rio
    try:
        user = User(
            username=username,
            nome=nome,
            email=email,
            password=generate_password_hash(password),
            status='ativo',
            role_id=perfil.id
        )
        db.session.add(user)
        db.session.commit()
        print(f"\n‚úÖ Usu√°rio '{username}' criado com sucesso!")
        print(f"   Perfil: {perfil.nome}")
        print(f"   Email: {email}")
    except Exception as e:
        print(f"‚ùå Erro ao criar usu√°rio: {e}")
        db.session.rollback()

def main():
    """Fun√ß√£o principal"""
    print("üè≠ Sistema de Certificados - Criador de Usu√°rios")
    print("=" * 50)
    
    with app.app_context():
        while True:
            print("\nOp√ß√µes:")
            print("1. Criar novo usu√°rio")
            print("2. Listar perfis")
            print("3. Sair")
            
            opcao = input("\nEscolha uma op√ß√£o (1-3): ").strip()
            
            if opcao == '1':
                criar_usuario()
            elif opcao == '2':
                listar_perfis()
            elif opcao == '3':
                print("Saindo...")
                break
            else:
                print("Op√ß√£o inv√°lida!")

if __name__ == '__main__':
    main() 